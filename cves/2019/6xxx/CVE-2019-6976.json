{
  "data_type": "CVE",
  "data_format": "MITRE",
  "data_version": "4.0",
  "CVE_data_meta": {
    "ID": "CVE-2019-6976",
    "ASSIGNER": "cve@mitre.org"
  },
  "problemtype": {
    "problemtype_data": [
      {
        "description": [
          {
            "lang": "en",
            "value": "CWE-908"
          }
        ]
      }
    ]
  },
  "references": {
    "reference_data": [
      {
        "url": "https://github.com/libvips/libvips/releases/tag/v8.7.4",
        "name": "https://github.com/libvips/libvips/releases/tag/v8.7.4",
        "refsource": "MISC",
        "tags": [
          "Third Party Advisory"
        ]
      },
      {
        "url": "https://github.com/libvips/libvips/commit/00622428bda8d7521db8d74260b519fa41d69d0a",
        "name": "https://github.com/libvips/libvips/commit/00622428bda8d7521db8d74260b519fa41d69d0a",
        "refsource": "MISC",
        "tags": [
          "Patch",
          "Third Party Advisory"
        ]
      },
      {
        "url": "https://blog.silentsignal.eu/2019/04/18/drop-by-drop-bleeding-through-libvips/",
        "name": "https://blog.silentsignal.eu/2019/04/18/drop-by-drop-bleeding-through-libvips/",
        "refsource": "MISC",
        "tags": [
          "Technical Description",
          "Third Party Advisory"
        ]
      }
    ]
  },
  "description": {
    "description_data": [
      {
        "lang": "en",
        "value": "libvips before 8.7.4 generates output images from uninitialized memory locations when processing corrupted input image data because iofuncs/memory.c does not zero out allocated memory. This can result in leaking raw process memory contents through the output image."
      }
    ]
  }
}