{
  "data_type": "CVE",
  "data_format": "MITRE",
  "data_version": "4.0",
  "CVE_data_meta": {
    "ID": "CVE-2019-12279",
    "ASSIGNER": "cve@mitre.org"
  },
  "problemtype": {
    "problemtype_data": [
      {
        "description": [
          {
            "lang": "en",
            "value": "CWE-89"
          }
        ]
      }
    ]
  },
  "references": {
    "reference_data": [
      {
        "url": "https://github.com/JameelNabbo/exploits/blob/master/nagiosxi%20username%20sql%20injection.txt",
        "name": "https://github.com/JameelNabbo/exploits/blob/master/nagiosxi%20username%20sql%20injection.txt",
        "refsource": "MISC",
        "tags": [
          "Exploit",
          "Third Party Advisory"
        ]
      },
      {
        "url": "http://packetstormsecurity.com/files/153040/Nagios-XI-5.6.1-SQL-Injection.html",
        "name": "http://packetstormsecurity.com/files/153040/Nagios-XI-5.6.1-SQL-Injection.html",
        "refsource": "MISC",
        "tags": []
      },
      {
        "url": "http://www.securityfocus.com/bid/108446",
        "name": "108446",
        "refsource": "BID",
        "tags": []
      }
    ]
  },
  "description": {
    "description_data": [
      {
        "lang": "en",
        "value": "Nagios XI 5.6.1 allows SQL injection via the username parameter to login.php?forgotpass (aka the reset password form). NOTE: The vendor disputes this issues as not being a vulnerability because the issue does not seem to be a legitimate SQL Injection. The POC does not show any valid injection that can be done with the variable provided, and while the username value being passed does get used in a SQL query, it is passed through SQL escaping functions when creating the call. The vendor tried re-creating the issue with no luck"
      }
    ]
  }
}