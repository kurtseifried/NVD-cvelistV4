{
  "data_type": "CVE",
  "data_format": "MITRE",
  "data_version": "4.0",
  "CVE_data_meta": {
    "ID": "CVE-2021-25076",
    "ASSIGNER": "contact@wpscan.com"
  },
  "problemtype": {
    "problemtype_data": [
      {
        "description": [
          {
            "lang": "en",
            "value": "CWE-89"
          }
        ]
      }
    ]
  },
  "references": {
    "reference_data": [
      {
        "url": "https://wpscan.com/vulnerability/6d3eeba6-5560-4380-a6e9-f008a9112ac6",
        "name": "https://wpscan.com/vulnerability/6d3eeba6-5560-4380-a6e9-f008a9112ac6",
        "refsource": "MISC",
        "tags": [
          "Exploit",
          "Third Party Advisory"
        ]
      },
      {
        "url": "https://plugins.trac.wordpress.org/changeset/2648715",
        "name": "https://plugins.trac.wordpress.org/changeset/2648715",
        "refsource": "CONFIRM",
        "tags": [
          "Patch",
          "Third Party Advisory"
        ]
      },
      {
        "url": "http://packetstormsecurity.com/files/166071/WordPress-WP-User-Frontend-3.5.25-SQL-Injection.html",
        "name": "http://packetstormsecurity.com/files/166071/WordPress-WP-User-Frontend-3.5.25-SQL-Injection.html",
        "refsource": "MISC",
        "tags": [
          "Exploit",
          "Third Party Advisory",
          "VDB Entry"
        ]
      }
    ]
  },
  "description": {
    "description_data": [
      {
        "lang": "en",
        "value": "The WP User Frontend WordPress plugin before 3.5.26 does not validate and escape the status parameter before using it in a SQL statement in the Subscribers dashboard, leading to an SQL injection. Due to the lack of sanitisation and escaping, this could also lead to Reflected Cross-Site Scripting"
      }
    ]
  }
}