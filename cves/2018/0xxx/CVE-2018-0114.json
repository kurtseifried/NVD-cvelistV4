{
  "data_type": "CVE",
  "data_format": "MITRE",
  "data_version": "4.0",
  "CVE_data_meta": {
    "ID": "CVE-2018-0114",
    "ASSIGNER": "psirt@cisco.com"
  },
  "problemtype": {
    "problemtype_data": [
      {
        "description": [
          {
            "lang": "en",
            "value": "CWE-347"
          }
        ]
      }
    ]
  },
  "references": {
    "reference_data": [
      {
        "url": "https://tools.cisco.com/security/center/viewAlert.x?alertId=56326",
        "name": "https://tools.cisco.com/security/center/viewAlert.x?alertId=56326",
        "refsource": "CONFIRM",
        "tags": [
          "Patch",
          "Vendor Advisory"
        ]
      },
      {
        "url": "https://github.com/cisco/node-jose/blob/master/CHANGELOG.md",
        "name": "https://github.com/cisco/node-jose/blob/master/CHANGELOG.md",
        "refsource": "CONFIRM",
        "tags": [
          "Release Notes",
          "Third Party Advisory"
        ]
      },
      {
        "url": "http://www.securityfocus.com/bid/102445",
        "name": "102445",
        "refsource": "BID",
        "tags": [
          "Third Party Advisory",
          "VDB Entry"
        ]
      },
      {
        "url": "https://github.com/zi0Black/POC-CVE-2018-0114",
        "name": "https://github.com/zi0Black/POC-CVE-2018-0114",
        "refsource": "MISC",
        "tags": [
          "Exploit",
          "Third Party Advisory"
        ]
      },
      {
        "url": "https://www.exploit-db.com/exploits/44324/",
        "name": "44324",
        "refsource": "EXPLOIT-DB",
        "tags": [
          "Third Party Advisory",
          "VDB Entry"
        ]
      }
    ]
  },
  "description": {
    "description_data": [
      {
        "lang": "en",
        "value": "A vulnerability in the Cisco node-jose open source library before 0.11.0 could allow an unauthenticated, remote attacker to re-sign tokens using a key that is embedded within the token. The vulnerability is due to node-jose following the JSON Web Signature (JWS) standard for JSON Web Tokens (JWTs). This standard specifies that a JSON Web Key (JWK) representing a public key can be embedded within the header of a JWS. This public key is then trusted for verification. An attacker could exploit this by forging valid JWS objects by removing the original signature, adding a new public key to the header, and then signing the object using the (attacker-owned) private key associated with the public key embedded in that JWS header."
      }
    ]
  }
}