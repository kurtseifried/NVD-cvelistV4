{
  "data_type": "CVE",
  "data_format": "MITRE",
  "data_version": "4.0",
  "CVE_data_meta": {
    "ID": "CVE-2023-28859",
    "ASSIGNER": "cve@mitre.org"
  },
  "problemtype": {
    "problemtype_data": [
      {
        "description": [
          {
            "lang": "en",
            "value": "CWE-459"
          }
        ]
      }
    ]
  },
  "references": {
    "reference_data": [
      {
        "url": "https://github.com/redis/redis-py/pull/2641",
        "name": "https://github.com/redis/redis-py/pull/2641",
        "refsource": "MISC",
        "tags": [
          "Issue Tracking",
          "Patch"
        ]
      },
      {
        "url": "https://github.com/redis/redis-py/issues/2665",
        "name": "https://github.com/redis/redis-py/issues/2665",
        "refsource": "MISC",
        "tags": [
          "Issue Tracking",
          "Patch",
          "Vendor Advisory"
        ]
      },
      {
        "url": "https://github.com/redis/redis-py/releases/tag/v4.4.4",
        "name": "https://github.com/redis/redis-py/releases/tag/v4.4.4",
        "refsource": "MISC",
        "tags": [
          "Release Notes"
        ]
      },
      {
        "url": "https://github.com/redis/redis-py/releases/tag/v4.5.4",
        "name": "https://github.com/redis/redis-py/releases/tag/v4.5.4",
        "refsource": "MISC",
        "tags": [
          "Release Notes"
        ]
      },
      {
        "url": "https://github.com/redis/redis-py/pull/2666",
        "name": "https://github.com/redis/redis-py/pull/2666",
        "refsource": "MISC",
        "tags": [
          "Release Notes"
        ]
      }
    ]
  },
  "description": {
    "description_data": [
      {
        "lang": "en",
        "value": "redis-py before 4.4.4 and 4.5.x before 4.5.4 leaves a connection open after canceling an async Redis command at an inopportune time, and can send response data to the client of an unrelated request. (This could, for example, happen for a non-pipeline operation.) NOTE: the solutions for CVE-2023-28859 address data leakage across AsyncIO connections in general."
      }
    ]
  }
}