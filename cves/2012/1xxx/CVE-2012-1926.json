{
  "data_type": "CVE",
  "data_format": "MITRE",
  "data_version": "4.0",
  "CVE_data_meta": {
    "ID": "CVE-2012-1926",
    "ASSIGNER": "cve@mitre.org"
  },
  "problemtype": {
    "problemtype_data": [
      {
        "description": [
          {
            "lang": "en",
            "value": "CWE-200"
          }
        ]
      }
    ]
  },
  "references": {
    "reference_data": [
      {
        "url": "http://www.opera.com/docs/changelogs/unix/1162/",
        "name": "http://www.opera.com/docs/changelogs/unix/1162/",
        "refsource": "CONFIRM",
        "tags": []
      },
      {
        "url": "http://www.opera.com/docs/changelogs/mac/1162/",
        "name": "http://www.opera.com/docs/changelogs/mac/1162/",
        "refsource": "CONFIRM",
        "tags": []
      },
      {
        "url": "http://www.opera.com/support/kb/view/1012/",
        "name": "http://www.opera.com/support/kb/view/1012/",
        "refsource": "CONFIRM",
        "tags": []
      },
      {
        "url": "http://www.opera.com/docs/changelogs/windows/1162/",
        "name": "http://www.opera.com/docs/changelogs/windows/1162/",
        "refsource": "CONFIRM",
        "tags": []
      },
      {
        "url": "http://secunia.com/advisories/48535",
        "name": "48535",
        "refsource": "SECUNIA",
        "tags": []
      },
      {
        "url": "http://lists.opensuse.org/opensuse-security-announce/2012-05/msg00012.html",
        "name": "openSUSE-SU-2012:0610",
        "refsource": "SUSE",
        "tags": []
      },
      {
        "url": "https://exchange.xforce.ibmcloud.com/vulnerabilities/74351",
        "name": "opera-historypushstate-info-disclosure(74351)",
        "refsource": "XF",
        "tags": []
      },
      {
        "url": "http://osvdb.org/80622",
        "name": "80622",
        "refsource": "OSVDB",
        "tags": []
      }
    ]
  },
  "description": {
    "description_data": [
      {
        "lang": "en",
        "value": "Opera before 11.62 allows remote attackers to bypass the Same Origin Policy via the (1) history.pushState and (2) history.replaceState functions in conjunction with cross-domain frames, leading to unintended read access to history.state information."
      }
    ]
  }
}