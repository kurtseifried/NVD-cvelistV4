{
  "data_type": "CVE",
  "data_format": "MITRE",
  "data_version": "4.0",
  "CVE_data_meta": {
    "ID": "CVE-2020-5219",
    "ASSIGNER": "security-advisories@github.com"
  },
  "problemtype": {
    "problemtype_data": [
      {
        "description": [
          {
            "lang": "en",
            "value": "CWE-74"
          }
        ]
      }
    ]
  },
  "references": {
    "reference_data": [
      {
        "url": "https://github.com/peerigon/angular-expressions/commit/061addfb9a9e932a970e5fcb913d020038e65667",
        "name": "https://github.com/peerigon/angular-expressions/commit/061addfb9a9e932a970e5fcb913d020038e65667",
        "refsource": "MISC",
        "tags": [
          "Patch"
        ]
      },
      {
        "url": "http://blog.angularjs.org/2016/09/angular-16-expression-sandbox-removal.html",
        "name": "http://blog.angularjs.org/2016/09/angular-16-expression-sandbox-removal.html",
        "refsource": "MISC",
        "tags": [
          "Vendor Advisory"
        ]
      },
      {
        "url": "https://github.com/peerigon/angular-expressions/security/advisories/GHSA-hxhm-96pp-2m43",
        "name": "https://github.com/peerigon/angular-expressions/security/advisories/GHSA-hxhm-96pp-2m43",
        "refsource": "CONFIRM",
        "tags": [
          "Mitigation",
          "Third Party Advisory"
        ]
      }
    ]
  },
  "description": {
    "description_data": [
      {
        "lang": "en",
        "value": "Angular Expressions before version 1.0.1 has a remote code execution vulnerability if you call expressions.compile(userControlledInput) where userControlledInput is text that comes from user input. If running angular-expressions in the browser, an attacker could run any browser script when the application code calls expressions.compile(userControlledInput). If running angular-expressions on the server, an attacker could run any Javascript expression, thus gaining Remote Code Execution."
      }
    ]
  }
}