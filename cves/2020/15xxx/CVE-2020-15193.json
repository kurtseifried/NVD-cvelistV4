{
  "data_type": "CVE",
  "data_format": "MITRE",
  "data_version": "4.0",
  "CVE_data_meta": {
    "ID": "CVE-2020-15193",
    "ASSIGNER": "security-advisories@github.com"
  },
  "problemtype": {
    "problemtype_data": [
      {
        "description": [
          {
            "lang": "en",
            "value": "CWE-908"
          }
        ]
      }
    ]
  },
  "references": {
    "reference_data": [
      {
        "url": "https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1",
        "name": "https://github.com/tensorflow/tensorflow/releases/tag/v2.3.1",
        "refsource": "MISC",
        "tags": [
          "Third Party Advisory"
        ]
      },
      {
        "url": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-rjjg-hgv6-h69v",
        "name": "https://github.com/tensorflow/tensorflow/security/advisories/GHSA-rjjg-hgv6-h69v",
        "refsource": "CONFIRM",
        "tags": [
          "Exploit",
          "Third Party Advisory"
        ]
      },
      {
        "url": "https://github.com/tensorflow/tensorflow/commit/22e07fb204386768e5bcbea563641ea11f96ceb8",
        "name": "https://github.com/tensorflow/tensorflow/commit/22e07fb204386768e5bcbea563641ea11f96ceb8",
        "refsource": "MISC",
        "tags": [
          "Patch",
          "Third Party Advisory"
        ]
      },
      {
        "url": "http://lists.opensuse.org/opensuse-security-announce/2020-10/msg00065.html",
        "name": "openSUSE-SU-2020:1766",
        "refsource": "SUSE",
        "tags": [
          "Mailing List",
          "Third Party Advisory"
        ]
      }
    ]
  },
  "description": {
    "description_data": [
      {
        "lang": "en",
        "value": "In Tensorflow before versions 2.2.1 and 2.3.1, the implementation of `dlpack.to_dlpack` can be made to use uninitialized memory resulting in further memory corruption. This is because the pybind11 glue code assumes that the argument is a tensor. However, there is nothing stopping users from passing in a Python object instead of a tensor. The uninitialized memory address is due to a `reinterpret_cast` Since the `PyObject` is a Python object, not a TensorFlow Tensor, the cast to `EagerTensor` fails. The issue is patched in commit 22e07fb204386768e5bcbea563641ea11f96ceb8 and is released in TensorFlow versions 2.2.1, or 2.3.1."
      }
    ]
  }
}