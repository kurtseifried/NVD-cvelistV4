{
  "data_type": "CVE",
  "data_format": "MITRE",
  "data_version": "4.0",
  "CVE_data_meta": {
    "ID": "CVE-2020-12612",
    "ASSIGNER": "cve@mitre.org"
  },
  "problemtype": {
    "problemtype_data": [
      {
        "description": [
          {
            "lang": "en",
            "value": "NVD-CWE-noinfo"
          }
        ]
      }
    ]
  },
  "references": {
    "reference_data": [
      {
        "url": "https://www.beyondtrust.com/support/changelog/privilege-management-for-windows-5-6-sr1",
        "name": "https://www.beyondtrust.com/support/changelog/privilege-management-for-windows-5-6-sr1",
        "refsource": "",
        "tags": [
          "Release Notes"
        ]
      },
      {
        "url": "https://www.beyondtrust.com/trust-center/security-advisories/bt22-09",
        "name": "https://www.beyondtrust.com/trust-center/security-advisories/bt22-09",
        "refsource": "",
        "tags": [
          "Vendor Advisory"
        ]
      }
    ]
  },
  "description": {
    "description_data": [
      {
        "lang": "en",
        "value": "An issue was discovered in BeyondTrust Privilege Management for Windows through 5.6. When specifying a program to elevate, it can typically be found within the Program Files (x86) folder and therefore uses the %ProgramFiles(x86)% environment variable. However, when this same policy gets pushed to a 32bit machine, this environment variable does not exist. Therefore, since the standard user can create a user level environment variable, they can repoint this variable to any folder the user has full control of. Then, the folder structure can be created in such a way that a rule matches and arbitrary code runs elevated."
      }
    ]
  }
}