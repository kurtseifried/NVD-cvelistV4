{
  "data_type": "CVE",
  "data_format": "MITRE",
  "data_version": "4.0",
  "CVE_data_meta": {
    "ID": "CVE-2016-1551",
    "ASSIGNER": "cert@cert.org"
  },
  "problemtype": {
    "problemtype_data": [
      {
        "description": [
          {
            "lang": "en",
            "value": "CWE-254"
          }
        ]
      }
    ]
  },
  "references": {
    "reference_data": [
      {
        "url": "http://www.talosintelligence.com/reports/TALOS-2016-0132/",
        "name": "http://www.talosintelligence.com/reports/TALOS-2016-0132/",
        "refsource": "MISC",
        "tags": [
          "Third Party Advisory"
        ]
      },
      {
        "url": "http://www.securityfocus.com/bid/88219",
        "name": "88219",
        "refsource": "BID",
        "tags": [
          "Third Party Advisory",
          "VDB Entry"
        ]
      },
      {
        "url": "http://www.oracle.com/technetwork/topics/security/bulletinapr2016-2952098.html",
        "name": "http://www.oracle.com/technetwork/topics/security/bulletinapr2016-2952098.html",
        "refsource": "CONFIRM",
        "tags": [
          "Third Party Advisory"
        ]
      },
      {
        "url": "https://security.gentoo.org/glsa/201607-15",
        "name": "GLSA-201607-15",
        "refsource": "GENTOO",
        "tags": []
      },
      {
        "url": "http://www.securitytracker.com/id/1035705",
        "name": "1035705",
        "refsource": "SECTRACK",
        "tags": []
      },
      {
        "url": "https://security.netapp.com/advisory/ntap-20171004-0002/",
        "name": "https://security.netapp.com/advisory/ntap-20171004-0002/",
        "refsource": "CONFIRM",
        "tags": []
      },
      {
        "url": "https://security.FreeBSD.org/advisories/FreeBSD-SA-16:16.ntp.asc",
        "name": "FreeBSD-SA-16:16",
        "refsource": "FREEBSD",
        "tags": []
      }
    ]
  },
  "description": {
    "description_data": [
      {
        "lang": "en",
        "value": "ntpd in NTP 4.2.8p3 and NTPsec a5fb34b9cc89b92a8fef2f459004865c93bb7f92 relies on the underlying operating system to protect it from requests that impersonate reference clocks. Because reference clocks are treated like other peers and stored in the same structure, any packet with a source ip address of a reference clock (127.127.1.1 for example) that reaches the receive() function will match that reference clock's peer record and will be treated as a trusted peer. Any system that lacks the typical martian packet filtering which would block these packets is in danger of having its time controlled by an attacker."
      }
    ]
  }
}