{
  "data_type": "CVE",
  "data_format": "MITRE",
  "data_version": "4.0",
  "CVE_data_meta": {
    "ID": "CVE-2008-3843",
    "ASSIGNER": "cve@mitre.org"
  },
  "problemtype": {
    "problemtype_data": [
      {
        "description": [
          {
            "lang": "en",
            "value": "CWE-79"
          }
        ]
      }
    ]
  },
  "references": {
    "reference_data": [
      {
        "url": "http://www.procheckup.com/PDFs/bypassing-dot-NET-ValidateRequest.pdf",
        "name": "http://www.procheckup.com/PDFs/bypassing-dot-NET-ValidateRequest.pdf",
        "refsource": "MISC",
        "tags": []
      },
      {
        "url": "http://www.procheckup.com/Vulnerability_PR08-20.php",
        "name": "http://www.procheckup.com/Vulnerability_PR08-20.php",
        "refsource": "MISC",
        "tags": []
      },
      {
        "url": "http://securityreason.com/securityalert/4193",
        "name": "4193",
        "refsource": "SREASON",
        "tags": []
      },
      {
        "url": "https://exchange.xforce.ibmcloud.com/vulnerabilities/44743",
        "name": "asp-validaterequestfilter-xss(44743)",
        "refsource": "XF",
        "tags": []
      },
      {
        "url": "http://www.securityfocus.com/archive/1/496071/100/0/threaded",
        "name": "20080908 Re: [WEB SECURITY] PR08-20: Bypassing ASP .NET \"ValidateRequest\" for Script Injection Attacks",
        "refsource": "BUGTRAQ",
        "tags": []
      },
      {
        "url": "http://www.securityfocus.com/archive/1/495667/100/0/threaded",
        "name": "20080821 PR08-20: Bypassing ASP .NET \"ValidateRequest\" for Script Injection Attacks",
        "refsource": "BUGTRAQ",
        "tags": []
      }
    ]
  },
  "description": {
    "description_data": [
      {
        "lang": "en",
        "value": "Request Validation (aka the ValidateRequest filters) in ASP.NET in Microsoft .NET Framework with the MS07-040 update does not properly detect dangerous client input, which allows remote attackers to conduct cross-site scripting (XSS) attacks, as demonstrated by a query string containing a \"<~/\" (less-than tilde slash) sequence followed by a crafted STYLE element."
      }
    ]
  }
}