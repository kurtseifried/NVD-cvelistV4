{
  "data_type": "CVE",
  "data_format": "MITRE",
  "data_version": "4.0",
  "CVE_data_meta": {
    "ID": "CVE-2007-4639",
    "ASSIGNER": "cve@mitre.org"
  },
  "problemtype": {
    "problemtype_data": [
      {
        "description": [
          {
            "lang": "en",
            "value": "CWE-824"
          }
        ]
      }
    ]
  },
  "references": {
    "reference_data": [
      {
        "url": "http://www.securityfocus.com/bid/25481",
        "name": "25481",
        "refsource": "BID",
        "tags": [
          "Broken Link",
          "Exploit",
          "Third Party Advisory",
          "VDB Entry"
        ]
      },
      {
        "url": "http://secunia.com/advisories/26640",
        "name": "26640",
        "refsource": "SECUNIA",
        "tags": [
          "Broken Link"
        ]
      },
      {
        "url": "http://www.vupen.com/english/advisories/2007/3040",
        "name": "ADV-2007-3040",
        "refsource": "VUPEN",
        "tags": [
          "Broken Link"
        ]
      },
      {
        "url": "https://exchange.xforce.ibmcloud.com/vulnerabilities/36328",
        "name": "enterprisedb-debugging-code-execution(36328)",
        "refsource": "XF",
        "tags": [
          "Broken Link",
          "Third Party Advisory",
          "VDB Entry"
        ]
      },
      {
        "url": "http://www.securityfocus.com/archive/1/478057/100/0/threaded",
        "name": "20070829 EnterpriseDB Advanced Server 8.2 Unitialized Pointer",
        "refsource": "BUGTRAQ",
        "tags": [
          "Broken Link",
          "Third Party Advisory",
          "VDB Entry"
        ]
      }
    ]
  },
  "description": {
    "description_data": [
      {
        "lang": "en",
        "value": "EnterpriseDB Advanced Server 8.2 does not properly handle certain debugging function calls that occur before a call to pldbg_create_listener, which allows remote authenticated users to cause a denial of service (daemon crash) and possibly execute arbitrary code via a SELECT statement that invokes a pldbg_ function, as demonstrated by (1) pldbg_get_stack and (2) pldbg_abort_target, which triggers use of an uninitialized pointer."
      }
    ]
  }
}